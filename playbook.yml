---
- hosts: all
  user: sdey
  become: true

  vars:
    user: sdey

  tasks:
    - name: 1. Update all packages to the latest version
      apt:
       update_cache: yes
    
    - name: 2. Install list of packages
      apt:
        name: ['git', 'vim', 'wget', 'tree', 'build-essential', 'zsh', 'tig', 'neofetch', 'postgresql-client', 'python-pip', 'parted', 'apt-transport-https', 'ca-certificates', 'curl', 'gnupg2', 'software-properties-common', 'net-tools']
       
    - name:  3. Ensure sdey user exists
      user: 
       name: '{{user}}'
       password: $6$QCmNVoH2xHr0.WoA$JALsrpqN.XvuazAh7Mv10eIAZb7CvL6w/LiOAxZpiumlKHpdeY6JRWP6aKlKmHV//c.AOrlm0hsoBthZhf1Ui1
       shell: /bin/zsh
       createhome: yes
       state: present 
       comment: Subhranil Dey

    - name: 4. Ensure sdey user is sudoer with no password required
      lineinfile:
       dest: /etc/sudoers
       state: present
       regexp: '^{{user}} ALL\='
       line: '{{user}} ALL=(ALL) NOPASSWD:ALL'
       validate: 'visudo -cf %s'

    - name: 5. synchronize .ssh   
      synchronize:
       src: ~/Pemfiles/
       dest: /home/{{user}}/.ssh/
       compress: yes 
       recursive: yes

    - name: 6. Allow ssh password authentication for sdey
      lineinfile:
        dest: /etc/ssh/sshd_config
        state: present
  #      backrefs: yes
        regexp: '^PasswordAuthentication\sno$'
        line: 'PasswordAuthentication yes'

    - name: 77 Add groups for standard users
      group:
        name: "vagrant"
        gid: "1002"
        state: present

    - name: 7. Restart sshd
      service: name=ssh state=restarted
      
    - name: 8. Clone oh-my-zsh repo
      git: repo=https://github.com/robbyrussell/oh-my-zsh.git dest=/home/{{user}}/.oh-my-zsh

    - name: 14. vimrc
      git: repo=https://github.com/amix/vimrc.git dest=/home/{{user}}/.vim_runtime
    
    - name: 9. Configure zsh syntax highlighting
      git: repo=https://github.com/zsh-users/zsh-syntax-highlighting.git dest=/usr/local/share/zsh-syntax-highlighting

    - name: 10. Deploy .zshrc
      template: src=zshrc-template.j2 dest=/home/{{user}}/.zshrc owner='{{user}}' group='{{user}}'

    - name: 11. seting lamda-mod-zsh-theme
      template: src=lambda-mod.zsh-theme.j2 dest=/home/{{user}}/.oh-my-zsh/themes/lambda-mod.zsh-theme owner='{{user}}' group='{{user}}'

    - name: 12. source bashrc file
      shell: "{{ item }}"
      with_items:
         - runuser -l  sdey -c 'source /home/{{user}}/.zshrc'
         - runuser -l  sdey -c 'sh /home/{{user}}/.vim_runtime/install_awesome_vimrc.sh'

    - name: 13. Change file permission
      file:
        dest: /home/{{user}}
        owner: '{{user}}'
        group: '{{user}}'
        recurse: yes

    - name: 14. Add Apt signing key from official docker repo
      apt_key:
        url: https://download.docker.com/linux/debian/gpg
        state: present

    - name: 15. Add docker official repository 
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/debian buster stable
        state: present

    - name: 16.Index new repo into the cache
      become: yes
      apt:
        name: "*"
        state: latest
        update_cache: yes
        force_apt_get: yes

    - name: 17. actually install docker
      apt:
        name: "docker-ce"
        state: latest
      
    - name: Ensure docker-compose is installed and available
      get_url:
        url: https://github.com/docker/compose/releases/download/1.24.1/docker-compose-{{ ansible_system }}-{{ ansible_userspace_architecture }}
        dest: /usr/local/bin/docker-compose
        mode: 'a+x,g+x'
        
    - name: 19. Remove useless packages from the cache
      apt:
        autoclean: yes

    - name: 20. Remove dependencies that are no longer required
      apt:
        autoremove: yes

    - name: 21. Adding existing user sdey to group docker
      user:
        name: '{{user}}'
        groups: docker, vagrant
        append: yes
